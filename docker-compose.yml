version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/academytrack?schema=public
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.academytrack-api.rule=Host(`api.academytrack.com`)"
      - "traefik.http.routers.academytrack-api.entrypoints=websecure"
      - "traefik.http.routers.academytrack-api.tls.certResolver=letsencrypt"
      - "traefik.http.services.academytrack-api.loadbalancer.server.port=3000"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=academytrack
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - dokploy-network

networks:
  dokploy-network:
    external: true

volumes:
  postgres_data: 