generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  surname    String    @db.VarChar(225)
  name       String    @db.VarChar(225)
  patronymic String?   @db.VarChar(225)
  login      String    @db.VarChar(55) @unique
  password   String    @db.VarChar(255)
  teacher    Teacher?
  student    Student?
  tokens     Token[]
}

model Teacher {
  id       Int       @id @default(autoincrement())
  userId   Int       @unique
  user     User      @relation(fields: [userId], references: [id])
  subjects TeacherGroupSubject[]
}

model Student {
  id         Int         @id @default(autoincrement())
  userId     Int         @unique
  user       User        @relation(fields: [userId], references: [id])
  groupId    Int
  group      Group       @relation(fields: [groupId], references: [id])
  attendance Attendance[]
}

model Group {
  id              Int                  @id @default(autoincrement())
  groupCode       String               @db.VarChar(15) @unique
  yearOfEntry     Int
  students        Student[]
  teacherSubjects TeacherGroupSubject[]

  Attendance Attendance[]
}

model Subject {
  id             Int                  @id @default(autoincrement())
  name           String               @db.VarChar(100)
  teacherSubjects TeacherGroupSubject[]
  attendance      Attendance[]
}

model TeacherGroupSubject {
  id         Int     @id @default(autoincrement())
  teacherId  Int
  teacher    Teacher @relation(fields: [teacherId], references: [id])
  groupId    Int
  group      Group   @relation(fields: [groupId], references: [id])
  subjectId  Int
  subject    Subject @relation(fields: [subjectId], references: [id])
}

model Attendance {
  id         Int               @id @default(autoincrement())
  date       DateTime          @db.Date
  status     AttendanceStatus
  subjectId  Int
  subject    Subject           @relation(fields: [subjectId], references: [id])
  groupId    Int
  group      Group             @relation(fields: [groupId], references: [id])
  studentId  Int
  student    Student           @relation(fields: [studentId], references: [id])
}

model Token {
  id         Int      @id @default(autoincrement())
  value      String   @db.VarChar(255)
  validUntil DateTime
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
}
